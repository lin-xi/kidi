(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{389:function(e,r,n){"use strict";n.r(r);var s=n(42),t=Object(s.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"service-服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#service-服务"}},[e._v("#")]),e._v(" service 服务")]),e._v(" "),n("h3",{attrs:{id:"创建-service"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建-service"}},[e._v("#")]),e._v(" 创建 service")]),e._v(" "),n("p",[e._v("使用 decoration 方式创建")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('import { app, model, service } from "kidi";\n\nlet userModel = model.create("userModel", {\n    id: {\n        type: Number,\n        primary: true,\n        generated: true,\n    },\n    name: {\n        type: String,\n    }, //资源配置\n});\n\n// inject model\n@service("user", "userModel")\nclass UserService {\n    constructor(userModel) {\n        this.model = userModel;\n    }\n    add(user) {\n        return this.model.add(user);\n    }\n    find(data) {\n        return this.model.find({ where: data });\n    }\n}\n\n// inject service\n@service("user2", "user")\nclass UserService2 {\n    constructor(user) {\n        this.service = user;\n    }\n    find2(data) {\n        return this.service.find(data);\n    }\n}\n')])])]),n("p",[e._v("非 decoration 方式创建")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('import { app, model, service } from "kidi";\n\nlet userModel = model.create("userModel", {\n    id: {\n        type: Number,\n        primary: true,\n        generated: true,\n    },\n    name: {\n        type: String,\n    }, //资源配置\n});\n\nclass UserService {\n    constructor(userModel) {\n        this.model = userModel;\n    }\n    add(user) {\n        return this.model.add(user);\n    }\n    find(data) {\n        return this.model.find({ where: data });\n    }\n}\nservice.create("user", UserService, "userModel")\n\nclass UserService2 {\n    constructor(user) {\n        this.service = user;\n    }\n    find2(data) {\n        return this.service.find(data);\n    }\n}\nservice.create("user2", UserService2, "user")\n')])])]),n("h3",{attrs:{id:"依赖注入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入"}},[e._v("#")]),e._v(" 依赖注入")]),e._v(" "),n("p",[e._v("创建服务时，可以注入 model 或其他服务，注入的实例会作为参数传入到服务的构造函数之中")])])}),[],!1,null,null,null);r.default=t.exports}}]);